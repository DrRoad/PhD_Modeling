import os, sys
from random import *
import numpy as np
import traci
import traci.constants as tc
import re
import sumolib
import time
#import SUMO_PYTHON.Pavement_Condition as PC
import pandas as pd

caliTESTPATH = '/Users/Biko/Documents/GitHub/PhD_Modeling/Calibrator_Test/cali-TEST-Run_Files/cali-TEST-Routing/Edges_IN_Routes.csv'

Routes_DF = pd.DataFrame([('START-Finish-Routed', ['START', '0_0-1_0', '1_0-2_0', '', '2_0-3_0', '3_0-3_1', '3_1-3_2', 'FINISH']),('0_0-0_1-Finish-Routed', ['0_0-0_1', '0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('0_0-1_0-Finish-Routed', ['0_0-1_0', '1_0-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('0_1-0_0-Finish-Routed', ['0_1-0_0', '0_0-1_0', '1_0-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('0_1-0_2-Finish-Routed', ['0_1-0_2', '0_2-1_2', '1_2-2_2', '2_2-3_2', 'FINISH']),('0_1-1_1-Finish-Routed', ['0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('0_2-0_1-Finish-Routed', ['0_2-0_1', '0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('0_2-1_2-Finish-Routed', ['0_2-1_2', '1_2-2_2', '2_2-3_2', 'FINISH']),('1_0-0_0-Finish-Routed', ['1_0-0_0', '0_0-0_1', '0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('1_0-1_1-Finish-Routed', ['1_0-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('1_0-2_0-Finish-Routed', ['1_0-2_0', '2_0-3_0', '3_0-3_1', '3_1-3_2', 'FINISH']),('1_1-0_1-Finish-Routed', ['1_1-0_1', '0_1-0_2', '0_2-1_2', '1_2-2_2', '2_2-3_2', 'FINISH']),('1_1-1_0-Finish-Routed', ['1_1-1_0', '1_0-2_0', '2_0-3_0', '3_0-3_1', '3_1-3_2', 'FINISH']),('1_1-2_1-Finish-Routed', ['1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('1_2-0_2-Finish-Routed', ['1_2-0_2', '0_2-0_1', '0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('1_2-2_2-Finish-Routed', ['1_2-2_2', '2_2-3_2', 'FINISH']),('2_0-1_0-Finish-Routed', ['2_0-1_0', '1_0-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('2_0-3_0-Finish-Routed', ['2_0-3_0', '3_0-3_1', '3_1-3_2', 'FINISH']),('2_1-1_1-Finish-Routed', ['2_1-1_1', '1_1-1_0', '1_0-2_0', '2_0-3_0', '3_0-3_1', '3_1-3_2', 'FINISH']),('2_1-2_2-Finish-Routed', ['2_1-2_2', '2_2-3_2', 'FINISH']),('2_1-3_1-Finish-Routed', ['2_1-3_1', '3_1-3_2', 'FINISH']),('2_2-1_2-Finish-Routed', ['2_2-1_2', '1_2-0_2', '0_2-0_1', '0_1-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('2_2-2_1-Finish-Routed', ['2_2-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('2_2-3_2-Finish-Routed', ['2_2-3_2', 'FINISH']),('3_0-2_0-Finish-Routed', ['3_0-2_0', '2_0-1_0', '1_0-1_1', '1_1-2_1', '2_1-3_1', '3_1-3_2', 'FINISH']),('3_0-3_1-Finish-Routed', ['3_0-3_1', '3_1-3_2', 'FINISH']),('3_1-2_1-Finish-Routed', ['3_1-2_1', '2_1-2_2', '2_2-3_2', 'FINISH']),('3_1-3_0-Finish-Routed', ['2_1-3_1', '3_1-3_2', 'FINISH']),('3_1-3_2-Finish-Routed', ['3_1-3_2', 'FINISH']),('3_2-2_2-Finish-Routed', ['3_1-3_2', 'FINISH']),('3_2-3_1-Finish-Routed', ['2_2-3_2', 'FINISH'])])

Edge_LIST = ('START','0_0-0_1','0_0-1_0','0_1-0_0','0_1-0_2','0_1-1_1','0_2-0_1','0_2-1_2','1_0-0_0','1_0-1_1','1_0-2_0','1_1-0_1','1_1-1_0','1_1-2_1','1_2-0_2','1_2-2_2','2_0-1_0','2_0-3_0','2_1-1_1','2_1-2_2','2_1-3_1','2_2-1_2','2_2-2_1','2_2-3_2','3_0-2_0','3_0-3_1','3_1-2_1','3_1-3_0','3_1-3_2','3_2-2_2','3_2-3_1','FINISH')
routeLIST = ('0_0-0_1 -Finish-Routed', '0_0-1_0 -Finish-Routed', '0_1-0_0 -Finish-Routed', '0_1-0_2 -Finish-Routed', '0_1-1_1 -Finish-Routed', '0_2-0_1 -Finish-Routed', '0_2-1_2 -Finish-Routed', '1_0-0_0 -Finish-Routed', '1_0-1_1 -Finish-Routed', '1_0-2_0 -Finish-Routed', '1_1-0_1 -Finish-Routed', '1_1-1_0 -Finish-Routed', '1_1-2_1 -Finish-Routed', '1_2-0_2 -Finish-Routed', '1_2-2_2 -Finish-Routed', '2_0-1_0 -Finish-Routed', '2_0-3_0 -Finish-Routed', '2_1-1_1 -Finish-Routed', '2_1-2_2 -Finish-Routed', '2_1-3_1 -Finish-Routed', '2_2-1_2 -Finish-Routed', '2_2-2_1 -Finish-Routed', '2_2-3_2 -Finish-Routed', '3_0-2_0 -Finish-Routed', '3_0-3_1 -Finish-Routed', '3_1-2_1 -Finish-Routed', '3_1-3_0 -Finish-Routed', '3_1-3_2 -Finish-Routed', '3_2-2_2 -Finish-Routed', '3_2-3_1 -Finish-Routed')

Edges_N_Routes_OLD = pd.DataFrame([('START-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_0-0_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_0-1_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_1-0_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_1-0_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_1-1_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_2-0_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('0_2-1_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_0-0_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_0-1_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_0-2_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_1-0_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_1-1_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_1-2_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_2-0_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('1_2-2_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_0-1_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_0-3_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_1-1_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_1-2_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_1-3_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_2-1_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_2-2_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('2_2-3_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_0-2_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_0-3_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_1-2_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_1-3_0-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_1-3_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_2-2_2-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), ('3_2-3_1-Finish-Routed', [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])])

Edges_N_Routes = {"START": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_0-0_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_0-1_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_1-0_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_1-0_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_1-1_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_2-0_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "0_2-1_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_0-0_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_0-1_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_0-2_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_1-0_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_1-1_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_1-2_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_2-0_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "1_2-2_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_0-1_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_0-3_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_1-1_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_1-2_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_1-3_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_2-1_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_2-2_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "2_2-3_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_0-2_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_0-3_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_1-2_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_1-3_0": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_1-3_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_2-2_2": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "3_2-3_1": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'], "FINISH": ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0']}

Edges_N_Routes = pd.DataFrame(Edges_N_Routes,index=Edge_LIST)(['START', '0_0-0_1', '0_0-1_0', '0_1-0_0', '0_1-0_2', '0_1-1_1', '0_2-0_1', '0_2-1_2', '1_0-0_0', '1_0-1_1', '1_0-2_0', '1_1-0_1', '1_1-1_0', '1_1-2_1', '1_2-0_2', '1_2-2_2', '2_0-1_0', '2_0-3_0', '2_1-1_1', '2_1-2_2', '2_1-3_1', '2_2-1_2', '2_2-2_1', '2_2-3_2', '3_0-2_0', '3_0-3_1', '3_1-2_1', '3_1-3_0', '3_1-3_2', '3_2-2_2', '3_2-3_1', 'FINISH']))
edgeNUM = 0
for edge_i in range(32):
	print(Edge_LIST[edge_i],"edgeNUM = ",edgeNUM)
	edgeNUM = edgeNUM +1
	for route_i in range(31):
		if Edge_LIST[edge_i] in Routes_DF.loc[route_i,1]:
			print("Edge ", Edge_LIST[edge_i]," has been found in route: ",Routes_DF.loc[route_i,0])
			#edgeName = Edge_LIST[edge_i]
			Edges_N_Routes.loc[route_i,edge_i] = Edge_LIST[edge_i]
		#else:
			#print(Edge_LIST[edge_i],"edgeNUM = ",edgeNUM," Routes_DF.loc[edgeNUM,1]= ",Routes_DF.loc[edgeNUM,1])
	edgeNUM = edgeNUM +1
		
edgeName = '3_1-2_1 '
routeNAME = 21#'2_2-2_1-Finish-Routed'
if edgeName in Routes_DF.loc[routeNAME,1]:
	print("Edge ", edgeName," has been found in route: ",Routes_DF.loc[routeNAME,0])

	
	Edges_N_Routes.to_csv(caliTESTPATH)
edge_ParametersDF = pd.read_csv(condition.EdgeParamPANDAPATH)