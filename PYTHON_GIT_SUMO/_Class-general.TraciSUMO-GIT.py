import os, sys
import numpy as np
import traci
import traci.constants as tc
import re
import sumolib
import time
import SUMO_PYTHON.Pavement_Condition as PC
import pandas as pd
from random import *

class general:
    sumoBinary = "C:/Sumo/SUMO-0.31.0/sumo-0.31.0/bin/sumo-gui"
    configPATH = "C:/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/Belmont_Output/BM-TRACI.sumocfg"
    sumoCmd = [sumoBinary, "-c", configPATH, "--start"]
    path='/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/Traci_Output-V2_file.txt'
    EdgeVehIDHistoryPANDAPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_VehIDhistoryNP.csv'
    resetEdgeVehIDHistoryPANDAPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_VehIDhistoryNPreset.csv'
    EdgeParamPANDAPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_ParamNP.csv'
    resetEdgeParamPANDAPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_ParamNPreset.csv'
    NPpath ='/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/Traci_Output-V2.1_file.npy'
    Streetpath ='/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/Belmont-Ave-EdgeList.npy'
    StreetDICpath = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/Belmont-Ave-EdgeDIC.npy'
    EdgeHistoryPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_VehIDhistoryNP.npy'
    resetEdgeHistoryPATH = '/Users/Biko/Dropbox/PhD/Research/Models/SUMO/SUMO_DropBox/Belmont_Ave-Run/SUMO_Python-Belmont/edge_VehIDhistoryNP_RESET.npy'
    #def __init__(self):
    Trucks_this_time_around = 0
    Edge_TOT_Trucks = 0
    Edge_TOT_Trucks_Current_Period = 0
    #If you want to reset edge_based_truck_count enter 1
    # edge_based_truck_count=np.load(NPpath)
    # Belmont_Ave = np.load(Streetpath)
    headerZ = []
    Period_Time = () 424978646  -424978642.0
    Period_Break_Point = 0
    Belmont_Ave=("-12150712#3","-12150712#4","-12150712#6","-12327906#0","-196358954#0","-196358954#3","-196358956#2","-387423966","-423956981","-423956982","-423965484","-423967058#0","-423967058#1","-423967352","-423967353","-423967354","-423967355","-423967356","-423967357","-423967358#1","-423967358#2","-423967359#0","-423967359#1","-424803245","-424803247#1","-424824619","-424824620","-424824621","-424978161","-424978642.0","-424978642.170","-424978643","-424978647#1","-448887867","-448887868","-448887869","-448887870#1","-448887871#0","-448887871#2","-49940170#0","12150712#3","12150712#4","12150712#5","12327906#0","12327906#1","196358954#0","196358954#1","196358956#0","387423966","423956978","423956979","423956980","423965484","423967058#1","423967352","423967353","423967354","423967355","423967356","423967358#0","423967358#2","423967359#0","423967359#1","424803245","424803247#0","424824619","424824620","424824621","424978639.0","424978639.102","424978640","424978643","424978644","424978646","448887867","448887868","448887869","448887870#0","448887871#0","448887871#1")
    
    Belmont_AVEDic ={'-12150712#3': 1, '-12150712#4': 2, '-12150712#6': 3, '-12327906#0': 4, '-196358954#0': 5, '-196358954#3': 6, '-196358956#2': 7, '-387423966': 8, '-423956981': 9, '-423956982': 10, '-423965484': 11, '-423967058#0': 12, '-423967058#1': 13, '-423967352': 14, '-423967353': 15, '-423967354': 16, '-423967355': 17, '-423967356': 18, '-423967357': 19, '-423967358#1': 20, '-423967358#2': 21, '-423967359#0': 22, '-423967359#1': 23, '-424803245': 24, '-424803247#1': 25, '-424824619': 26, '-424824620': 27, '-424824621': 28, '-424978161': 29, '-424978642.0': 30, '-424978642.170': 31, '-424978643': 32, '-424978647#1': 33, '-448887867': 34, '-448887868': 35, '-448887869': 36, '-448887870#1': 37, '-448887871#0': 38, '-448887871#2': 39, '-49940170#0': 40, '12150712#3': 41, '12150712#4': 42, '12150712#5': 43, '12327906#0': 44, '12327906#1': 45, '196358954#0': 46, '196358954#1': 47, '196358956#0': 48, '387423966': 49, '423956978': 50, '423956979': 51, '423956980': 52, '423965484': 53, '423967058#1': 54, '423967352': 55, '423967353': 56, '423967354': 57, '423967355': 58, '423967356': 59, '423967358#0': 60, '423967358#2': 61, '423967359#0': 62, '423967359#1': 63, '424803245': 64, '424803247#0': 65, '424824619': 66, '424824620': 67, '424824621': 68, '424978639.0': 69, '424978639.102': 70, '424978640': 71, '424978643': 72, '424978644': 73, '424978646': 74, '448887867': 75, '448887868': 76, '448887869': 77, '448887870#0': 78, '448887871#0': 79, '448887871#1': 80}
    
    EdgeHistoryDIC ={'-12150712#3' : 0, '-12150712#4' : 1, '-12150712#6' : 2, '-12327906#0' : 3, '-196358954#0' : 4, '-196358954#3' : 5, '-196358956#2' : 6, '-387423966' : 7, '-423956981' : 8, '-423956982' : 9, '-423965484' : 10, '-423967058#0' : 11, '-423967058#1' : 12, '-423967352' : 13, '-423967353' : 14, '-423967354' : 15, '-423967355' : 16, '-423967356' : 17, '-423967357' : 18, '-423967358#1' : 19, '-423967358#2' : 20, '-423967359#0' : 21, '-423967359#1' : 22, '-424803245' : 23, '-424803247#1' : 24, '-424824619' : 25, '-424824620' : 26, '-424824621' : 27, '-424978161' : 28, '-424978642.0' : 29, '-424978642.170' : 30, '-424978643' : 31, '-424978647#1' : 32, '-448887867' : 33, '-448887868' : 34, '-448887869' : 35, '-448887870#1' : 36, '-448887871#0' : 37, '-448887871#2' : 38, '-49940170#0' : 39, '12150712#3' : 40, '12150712#4' : 41, '12150712#5' : 42, '12327906#0' : 43, '12327906#1' : 44, '196358954#0' : 45, '196358954#1' : 46, '196358956#0' : 47, '387423966' : 48, '423956978' : 49, '423956979' : 50, '423956980' : 51, '423965484' : 52, '423967058#1' : 53, '423967352' : 54, '423967353' : 55, '423967354' : 56, '423967355' : 57, '423967356' : 58, '423967358#0' : 59, '423967358#2' : 60, '423967359#0' : 61, '423967359#1' : 62, '424803245' : 63, '424803247#0' : 64, '424824619' : 65, '424824620' : 66, '424824621' : 67, '424978639.0' : 68, '424978639.102' : 69, '424978640' : 70, '424978643' : 71, '424978644' : 72, '424978646' : 73, '448887867' : 74, '448887868' : 75, '448887869' : 76, '448887870#0' : 77, '448887871#0' : 78, '448887871#1' : 79}
    
    edge_based_truck_count=np.array([["-12150712#3",0], ["-12150712#4",0], ["-12150712#6",0], ["-12327906#0",0], ["-196358954#0",0], ["-196358954#3",0], ["-196358956#2",0], ["-387423966",0], ["-423956981",0], ["-423956982",0], ["-423965484",0], ["-423967058#0",0], ["-423967058#1",0], ["-423967352",0], ["-423967353",0], ["-423967354",0], ["-423967355",0], ["-423967356",0], ["-423967357",0], ["-423967358#1",0], ["-423967358#2",0], ["-423967359#0",0], ["-423967359#1",0], ["-424803245",0], ["-424803247#1",0], ["-424824619",0], ["-424824620",0], ["-424824621",0], ["-424978161",0], ["-424978642.0",0], ["-424978642.170",0], ["-424978643",0], ["-424978647#1",0], ["-448887867",0], ["-448887868",0], ["-448887869",0], ["-448887870#1",0], ["-448887871#0",0], ["-448887871#2",0], ["-49940170#0",0], ["12150712#3",0], ["12150712#4",0], ["12150712#5",0], ["12327906#0",0], ["12327906#1",0], ["196358954#0",0], ["196358954#1",0], ["196358956#0",0], ["387423966",0], ["423956978",0], ["423956979",0], ["423956980",0], ["423965484",0], ["423967058#1",0], ["423967352",0], ["423967353",0], ["423967354",0], ["423967355",0], ["423967356",0], ["423967358#0",0], ["423967358#2",0], ["423967359#0",0], ["423967359#1",0], ["424803245",0], ["424803247#0",0], ["424824619",0], ["424824620",0], ["424824621",0], ["424978639.0",0], ["424978639.102",0], ["424978640",0], ["424978643",0], ["424978644",0], ["424978646",0], ["448887867",0], ["448887868",0], ["448887869",0], ["448887870#0",0], ["448887871#0",0], ["448887871#1",0]])
    
    edge_based_truck_count_T0=np.array([["-12150712#3",0], ["-12150712#4",0], ["-12150712#6",0], ["-12327906#0",0], ["-196358954#0",0], ["-196358954#3",0], ["-196358956#2",0], ["-387423966",0], ["-423956981",0], ["-423956982",0], ["-423965484",0], ["-423967058#0",0], ["-423967058#1",0], ["-423967352",0], ["-423967353",0], ["-423967354",0], ["-423967355",0], ["-423967356",0], ["-423967357",0], ["-423967358#1",0], ["-423967358#2",0], ["-423967359#0",0], ["-423967359#1",0], ["-424803245",0], ["-424803247#1",0], ["-424824619",0], ["-424824620",0], ["-424824621",0], ["-424978161",0], ["-424978642.0",0], ["-424978642.170",0], ["-424978643",0], ["-424978647#1",0], ["-448887867",0], ["-448887868",0], ["-448887869",0], ["-448887870#1",0], ["-448887871#0",0], ["-448887871#2",0], ["-49940170#0",0], ["12150712#3",0], ["12150712#4",0], ["12150712#5",0], ["12327906#0",0], ["12327906#1",0], ["196358954#0",0], ["196358954#1",0], ["196358956#0",0], ["387423966",0], ["423956978",0], ["423956979",0], ["423956980",0], ["423965484",0], ["423967058#1",0], ["423967352",0], ["423967353",0], ["423967354",0], ["423967355",0], ["423967356",0], ["423967358#0",0], ["423967358#2",0], ["423967359#0",0], ["423967359#1",0], ["424803245",0], ["424803247#0",0], ["424824619",0], ["424824620",0], ["424824621",0], ["424978639.0",0], ["424978639.102",0], ["424978640",0], ["424978643",0], ["424978644",0], ["424978646",0], ["448887867",0], ["448887868",0], ["448887869",0], ["448887870#0",0], ["448887871#0",0], ["448887871#1",0]])

    
    https://pandas.pydata.org/pandas-docs/stable/dsintro.html    
edge_based_truck_count_T0 = pd.DataFrame.from_items([( '-12150712#3', [ '0', '00', '00']), ( '-12150712#4', [ '0', '00', '00']), ( '-12150712#6', [ '2', '00', '00']), ( '-12327906#0', [ '0', '00', '00']), ( '-196358954#0', [ '4', '00', '00']), ( '-196358954#3', [ '0', '00', '00']), ( '-196358956#2', [ '0', '00', '00']), ( '-387423966', [ '0', '00', '00']), ( '-423956981', [ '0', '00', '00']), ( '-423956982', [ '0', '00', '00']), ( '-423965484', [ '0', '00', '00']), ( '-423967058#0', [ '0', '00', '00']), ( '-423967058#1', [ '0', '00', '00']), ( '-423967352', [ '0', '00', '00']), ( '-423967353', [ '0', '00', '00']), ( '-423967354', [ '0', '00', '00']), ( '-423967355', [ '0', '00', '00']), ( '-423967356', [ '0', '00', '00']), ( '-423967357', [ '0', '00', '00']), ( '-423967358#1', [ '0', '00', '00']), ( '-423967358#2', [ '0', '00', '00']), ( '-423967359#0', [ '0', '00', '00']), ( '-423967359#1', [ '0', '00', '00']), ( '-424803245', [ '0', '00', '00']), ( '-424803247#1', [ '0', '00', '00']), ( '-424824619', [ '0', '00', '00']), ( '-424824620', [ '0', '00', '00']), ( '-424824621', [ '0', '00', '00']), ( '-424978161', [ '0', '00', '00']), ( '-424978642.0', [ '0', '00', '00']), ( '-424978642.170', [ '0', '00', '00']), ( '-424978643', [ '0', '00', '00']), ( '-424978647#1', [ '0', '00', '00']), ( '-448887867', [ '0', '00', '00']), ( '-448887868', [ '0', '00', '00']), ( '-448887869', [ '0', '00', '00']), ( '-448887870#1', [ '0', '00', '00']), ( '-448887871#0', [ '0', '00', '00']), ( '-448887871#2', [ '0', '00', '00']), ( '-49940170#0', [ '0', '00', '00']), ( '12150712#3', [ '0', '00', '00']), ( '12150712#4', [ '0', '00', '00']), ( '12150712#5', [ '0', '00', '00']), ( '12327906#0', [ '0', '00', '00']), ( '12327906#1', [ '0', '00', '00']), ( '196358954#0', [ '0', '00', '00']), ( '196358954#1', [ '0', '00', '00']), ( '196358956#0', [ '0', '00', '00']), ( '387423966', [ '0', '00', '00']), ( '423956978', [ '0', '00', '00']), ( '423956979', [ '0', '00', '00']), ( '423956980', [ '0', '00', '00']), ( '423965484', [ '0', '00', '00']), ( '423967058#1', [ '0', '00', '00']), ( '423967352', [ '0', '00', '00']), ( '423967353', [ '0', '00', '00']), ( '423967354', [ '0', '00', '00']), ( '423967355', [ '0', '00', '00']), ( '423967356', [ '0', '00', '00']), ( '423967358#0', [ '0', '00', '00']), ( '423967358#2', [ '0', '00', '00']), ( '423967359#0', [ '0', '00', '00']), ( '423967359#1', [ '0', '00', '00']), ( '424803245', [ '0', '00', '00']), ( '424803247#0', [ '0', '00', '00']), ( '424824619', [ '0', '00', '00']), ( '424824620', [ '0', '00', '00']), ( '424824621', ['0', '00', '00']), ( '424978639.0', [ '0', '00', '00']), ( '424978639.102', [ '0', '00', '00']), ( '424978640', [ '0', '00', '00']), ( '424978643', [ '0', '00', '00']), ( '424978644', [ '0', '00', '00']), ( '424978646', [ '0', '00', '00']), ( '448887867',[ '0', '00', '00']), ( '448887868', [ '0', '00', '00']), ( '448887869', [ '0', '00', '00']), ( '448887870#0', [ '0', '00', '00']), ( '448887871#0', [ '0', '00', '00']), ( '448887871#1', [ '0', '00', '00'])])

edge_based_truck_count_DF_T0 = { '-12150712#3': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-12150712#4': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-12150712#6': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-12327906#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-196358954#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-196358954#3': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-196358956#2': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-387423966': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423956981': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423956982': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423965484': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967058#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967058#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967352': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967353': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967354': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967355': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967356': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967357': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967358#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967358#2': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967359#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-423967359#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424803245': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424803247#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424824619': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424824620': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424824621': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424978161': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424978642.0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424978642.170': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424978643': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-424978647#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887867': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887868': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887869': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887870#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887871#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-448887871#2': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '-49940170#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '12150712#3': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '12150712#4': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '12150712#5': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '12327906#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '12327906#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '196358954#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '196358954#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '196358956#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '387423966': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423956978': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423956979': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423956980': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423965484': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967058#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967352': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967353': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967354': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967355': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967356': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967358#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967358#2': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967359#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '423967359#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424803245': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424803247#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424824619': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424824620': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424824621': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978639.0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978639.102': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978640': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978643': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978644': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '424978646': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887867': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887868': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887869': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887870#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887871#0': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2']), '448887871#1': pd.Series([0,00,00,00], index=['Total','T_i','T_i-1','T_i-2'])}


pavementConditionarrary_T0 = np.array([["Edge_ID","Condition_RT","Tot_Trucks","Trucks_Pi","Trucks_Pi-1","Trucks_Pi-2","Trucks_Pi-3","MaxSpeed_i_m/s"],["-12150712#3",100,0,0,0,0,0,29],["-12150712#4",100,0,0,0,0,0,29],["-12150712#6",100,0,0,0,0,0,29],["-12327906#0",100,0,0,0,0,0,29],["-196358954#0",100,0,0,0,0,0,29],["-196358954#3",100,0,0,0,0,0,29],["-196358956#2",100,0,0,0,0,0,29],["-387423966",100,0,0,0,0,0,29],["-423956981",100,0,0,0,0,0,29],["-423956982",100,0,0,0,0,0,29],["-423965484",100,0,0,0,0,0,29],["-423967058#0",100,0,0,0,0,0,29],["-423967058#1",100,0,0,0,0,0,29],["-423967352",100,0,0,0,0,0,29],["-423967353",100,0,0,0,0,0,29],["-423967354",100,0,0,0,0,0,29],["-423967355",100,0,0,0,0,0,29],["-423967356",100,0,0,0,0,0,29],["-423967357",100,0,0,0,0,0,29],["-423967358#1",100,0,0,0,0,0,29],["-423967358#2",100,0,0,0,0,0,29],["-423967359#0",100,0,0,0,0,0,29],["-423967359#1",100,0,0,0,0,0,29],["-424803245",100,0,0,0,0,0,29],["-424803247#1",100,0,0,0,0,0,29],["-424824619",100,0,0,0,0,0,29],["-424824620",100,0,0,0,0,0,29],["-424824621",100,0,0,0,0,0,29],["-424978161",100,0,0,0,0,0,29],["-424978642.0",100,0,0,0,0,0,29],["-424978642.170",100,0,0,0,0,0,29],["-424978643",100,0,0,0,0,0,29],["-424978647#1",100,0,0,0,0,0,29],["-448887867",100,0,0,0,0,0,29],["-448887868",100,0,0,0,0,0,29],["-448887869",100,0,0,0,0,0,29],["-448887870#1",100,0,0,0,0,0,29],["-448887871#0",100,0,0,0,0,0,29],["-448887871#2",100,0,0,0,0,0,29],["-49940170#0",100,0,0,0,0,0,29],["12150712#3",100,0,0,0,0,0,29],["12150712#4",100,0,0,0,0,0,29],["12150712#5",100,0,0,0,0,0,29],["12327906#0",100,0,0,0,0,0,29],["12327906#1",100,0,0,0,0,0,29],["196358954#0",100,0,0,0,0,0,29],["196358954#1",100,0,0,0,0,0,29],["196358956#0",100,0,0,0,0,0,29],["387423966",100,0,0,0,0,0,29],["423956978",100,0,0,0,0,0,29],["423956979",100,0,0,0,0,0,29],["423956980",100,0,0,0,0,0,29],["423965484",100,0,0,0,0,0,29],["423967058#1",100,0,0,0,0,0,29],["423967352",100,0,0,0,0,0,29],["423967353",100,0,0,0,0,0,29],["423967354",100,0,0,0,0,0,29],["423967355",100,0,0,0,0,0,29],["423967356",100,0,0,0,0,0,29],["423967358#0",100,0,0,0,0,0,29],["423967358#2",100,0,0,0,0,0,29],["423967359#0",100,0,0,0,0,0,29],["423967359#1",100,0,0,0,0,0,29],["424803245",100,0,0,0,0,0,29],["424803247#0",100,0,0,0,0,0,29],["424824619",100,0,0,0,0,0,29],["424824620",100,0,0,0,0,0,29],["424824621",100,0,0,0,0,0,29],["424978639.0",100,0,0,0,0,0,29],["424978639.102",100,0,0,0,0,0,29],["424978640",100,0,0,0,0,0,29],["424978643",100,0,0,0,0,0,29],["424978644",100,0,0,0,0,0,29],["424978646",100,0,0,0,0,0,29],["448887867",100,0,0,0,0,0,29],["448887868",100,0,0,0,0,0,29],["448887869",100,0,0,0,0,0,29],["448887870#0",100,0,0,0,0,0,29],["448887871#0",100,0,0,0,0,0,29],["448887871#1",100,0,0,0,0,0,29]],dtype=object)

pCD = {'-12150712#3': [100,0,0,0,0,0,29],'-12150712#4': [100,0,0,0,0,0,29],'-12150712#6': [100,0,0,0,0,0,29],'-12327906#0': [100,0,0,0,0,0,29],'-196358954#0': [100,0,0,0,0,0,29],'-196358954#3': [100,0,0,0,0,0,29],'-196358956#2': [100,0,0,0,0,0,29],'-387423966': [100,0,0,0,0,0,29],'-423956981': [100,0,0,0,0,0,29],'-423956982': [100,0,0,0,0,0,29],'-423965484': [100,0,0,0,0,0,29],'-423967058#0': [100,0,0,0,0,0,29],'-423967058#1': [100,0,0,0,0,0,29],'-423967352': [100,0,0,0,0,0,29],'-423967353': [100,0,0,0,0,0,29],'-423967354': [100,0,0,0,0,0,29],'-423967355': [100,0,0,0,0,0,29],'-423967356': [100,0,0,0,0,0,29],'-423967357': [100,0,0,0,0,0,29],'-423967358#1': [100,0,0,0,0,0,29],'-423967358#2': [100,0,0,0,0,0,29],'-423967359#0': [100,0,0,0,0,0,29],'-423967359#1': [100,0,0,0,0,0,29],'-424803245': [100,0,0,0,0,0,29],'-424803247#1': [100,0,0,0,0,0,29],'-424824619': [100,0,0,0,0,0,29],'-424824620': [100,0,0,0,0,0,29],'-424824621': [100,0,0,0,0,0,29],'-424978161': [100,0,0,0,0,0,29],'-424978642.0': [100,0,0,0,0,0,29],'-424978642.170': [100,0,0,0,0,0,29],'-424978643': [100,0,0,0,0,0,29],'-424978647#1': [100,0,0,0,0,0,29],'-448887867': [100,0,0,0,0,0,29],'-448887868': [100,0,0,0,0,0,29],'-448887869': [100,0,0,0,0,0,29],'-448887870#1': [100,0,0,0,0,0,29],'-448887871#0': [100,0,0,0,0,0,29],'-448887871#2': [100,0,0,0,0,0,29],'-49940170#0': [100,0,0,0,0,0,29],'12150712#3': [100,0,0,0,0,0,29],'12150712#4': [100,0,0,0,0,0,29],'12150712#5': [100,0,0,0,0,0,29],'12327906#0': [100,0,0,0,0,0,29],'12327906#1': [100,0,0,0,0,0,29],'196358954#0': [100,0,0,0,0,0,29],'196358954#1': [100,0,0,0,0,0,29],'196358956#0': [100,0,0,0,0,0,29],'387423966': [100,0,0,0,0,0,29],'423956978': [100,0,0,0,0,0,29],'423956979': [100,0,0,0,0,0,29],'423956980': [100,0,0,0,0,0,29],'423965484': [100,0,0,0,0,0,29],'423967058#1': [100,0,0,0,0,0,29],'423967352': [100,0,0,0,0,0,29],'423967353': [100,0,0,0,0,0,29],'423967354': [100,0,0,0,0,0,29],'423967355': [100,0,0,0,0,0,29],'423967356': [100,0,0,0,0,0,29],'423967358#0': [100,0,0,0,0,0,29],'423967358#2': [100,0,0,0,0,0,29],'423967359#0': [100,0,0,0,0,0,29],'423967359#1': [100,0,0,0,0,0,29],'424803245': [100,0,0,0,0,0,29],'424803247#0': [100,0,0,0,0,0,29],'424824619': [100,0,0,0,0,0,29],'424824620': [100,0,0,0,0,0,29],'424824621': [100,0,0,0,0,0,29],'424978639.0': [100,0,0,0,0,0,29],'424978639.102': [100,0,0,0,0,0,29],'424978640': [100,0,0,0,0,0,29],'424978643': [100,0,0,0,0,0,29],'424978644': [100,0,0,0,0,0,29],'424978646': [100,0,0,0,0,0,29],'448887867': [100,0,0,0,0,0,29],'448887868': [100,0,0,0,0,0,29],'448887869': [100,0,0,0,0,0,29],'448887870#0': [100,0,0,0,0,0,29],'448887871#0': [100,0,0,0,0,0,29],'448887871#1': [100,0,0,0,0,0,29]}

edge_parametersDF = pd.DataFrame(edge_parametersDF,index=['Condition_RT','Tot_Trucks','Trucks_Pi','Trucks_Pi-1','Trucks_Pi-2','Trucks_Pi-3','MaxSpeed_i_m/s','O_max_mph'])
edge_parametersDF.to_csv(resetEdgeParamPANDAPATH)
pcDF = pd.read_csv(EdgeHistoryPANDAPATH)
for rd in Belmont_Ave:
     pcDF[rd]['Condition_RT']=100
for rd in Belmont_Ave:
    maxSpeedo = pcDF.at['O_max_mph',str(Belmont_AVEDic[rd])]
    #print("maxSpeedo = ",maxSpeedo)
    #Condition_RTi = randint(25,100)
    Condition_RTi = pcDF.at['Condition_RT',str(Belmont_AVEDic[rd])] #= Condition_RTi
    maxSpeed_i = 0.44704 *  (maxSpeedo - (maxSpeedo**((100-Condition_RTi)/96))+4.5675) #0.44704(km/mph)
    pcDF.at['MaxSpeed_i_m/s',str(Belmont_AVEDic[rd])] = maxSpeed_i
    
edge_parametersDF = {'1': [100,0,0,0,0,0,29,30], '2': [100,0,0,0,0,0,29,30], '3': [100,0,0,0,0,0,29,30], '4': [100,0,0,0,0,0,29,30], '5': [100,0,0,0,0,0,29,30], '6': [100,0,0,0,0,0,29,30], '7': [100,0,0,0,0,0,29,30], '8': [100,0,0,0,0,0,29,30], '9': [100,0,0,0,0,0,29,30], '10': [100,0,0,0,0,0,29,30], '11': [100,0,0,0,0,0,29,30], '12': [100,0,0,0,0,0,29,30], '13': [100,0,0,0,0,0,29,30], '14': [100,0,0,0,0,0,29,30], '15': [100,0,0,0,0,0,29,30], '16': [100,0,0,0,0,0,29,30], '17': [100,0,0,0,0,0,29,30], '18': [100,0,0,0,0,0,29,30], '19': [100,0,0,0,0,0,29,30], '20': [100,0,0,0,0,0,29,30], '21': [100,0,0,0,0,0,29,30], '22': [100,0,0,0,0,0,29,30], '23': [100,0,0,0,0,0,29,30], '24': [100,0,0,0,0,0,29,30], '25': [100,0,0,0,0,0,29,30], '26': [100,0,0,0,0,0,29,30], '27': [100,0,0,0,0,0,29,30], '28': [100,0,0,0,0,0,29,30], '29': [100,0,0,0,0,0,29,30], '30': [100,0,0,0,0,0,29,30], '31': [100,0,0,0,0,0,29,30], '32': [100,0,0,0,0,0,29,30], '33': [100,0,0,0,0,0,29,30], '34': [100,0,0,0,0,0,29,30], '35': [100,0,0,0,0,0,29,30], '36': [100,0,0,0,0,0,29,30], '37': [100,0,0,0,0,0,29,30], '38': [100,0,0,0,0,0,29,30], '39': [100,0,0,0,0,0,29,30], '40': [100,0,0,0,0,0,29,30], '41': [100,0,0,0,0,0,29,30], '42': [100,0,0,0,0,0,29,30], '43': [100,0,0,0,0,0,29,30], '44': [100,0,0,0,0,0,29,30], '45': [100,0,0,0,0,0,29,30], '46': [100,0,0,0,0,0,29,30], '47': [100,0,0,0,0,0,29,30], '48': [100,0,0,0,0,0,29,30], '49': [100,0,0,0,0,0,29,30], '50': [100,0,0,0,0,0,29,30], '51': [100,0,0,0,0,0,29,30], '52': [100,0,0,0,0,0,29,30], '53': [100,0,0,0,0,0,29,30], '54': [100,0,0,0,0,0,29,30], '55': [100,0,0,0,0,0,29,30], '56': [100,0,0,0,0,0,29,30], '57': [100,0,0,0,0,0,29,30], '58': [100,0,0,0,0,0,29,30], '59': [100,0,0,0,0,0,29,30], '60': [100,0,0,0,0,0,29,30], '61': [100,0,0,0,0,0,29,30], '62': [100,0,0,0,0,0,29,30], '63': [100,0,0,0,0,0,29,30], '64': [100,0,0,0,0,0,29,30], '65': [100,0,0,0,0,0,29,30], '66': [100,0,0,0,0,0,29,30], '67': [100,0,0,0,0,0,29,30], '68': [100,0,0,0,0,0,29,30], '69': [100,0,0,0,0,0,29,30], '70': [100,0,0,0,0,0,29,30], '71': [100,0,0,0,0,0,29,30], '72': [100,0,0,0,0,0,29,30], '73': [100,0,0,0,0,0,29,30], '74': [100,0,0,0,0,0,29,30], '75': [100,0,0,0,0,0,29,30], '76': [100,0,0,0,0,0,29,30], '77': [100,0,0,0,0,0,29,30], '78': [100,0,0,0,0,0,29,30], '79': [100,0,0,0,0,0,29,30], '80': [100,0,0,0,0,0,29,30]}     
     
 edge_parametersDF = pd.DataFrame(edge_parametersDF,index=['Condition_RT','Tot_Trucks','Trucks_Pi','Trucks_Pi-1','Trucks_Pi-2','Trucks_Pi-3','MaxSpeed_i_m/s','O_max_mph'])
edge_parametersDF.to_csv(resetEdgeParamPANDAPATH)
pCD = {"-12150712#3": [100,0,0,0,0,0,29],"-12150712#4": [100,0,0,0,0,0,29],"-12150712#6": [100,0,0,0,0,0,29],"-12327906#0": [100,0,0,0,0,0,29],"-196358954#0": [100,0,0,0,0,0,29],"-196358954#3": [100,0,0,0,0,0,29],"-196358956#2": [100,0,0,0,0,0,29],"-387423966": [100,0,0,0,0,0,29],"-423956981": [100,0,0,0,0,0,29],"-423956982": [100,0,0,0,0,0,29],"-423965484": [100,0,0,0,0,0,29],"-423967058#0": [100,0,0,0,0,0,29],"-423967058#1": [100,0,0,0,0,0,29],"-423967352": [100,0,0,0,0,0,29],"-423967353": [100,0,0,0,0,0,29],"-423967354": [100,0,0,0,0,0,29],"-423967355": [100,0,0,0,0,0,29],"-423967356": [100,0,0,0,0,0,29],"-423967357": [100,0,0,0,0,0,29],"-423967358#1": [100,0,0,0,0,0,29],"-423967358#2": [100,0,0,0,0,0,29],"-423967359#0": [100,0,0,0,0,0,29],"-423967359#1": [100,0,0,0,0,0,29],"-424803245": [100,0,0,0,0,0,29],"-424803247#1": [100,0,0,0,0,0,29],"-424824619": [100,0,0,0,0,0,29],"-424824620": [100,0,0,0,0,0,29],"-424824621": [100,0,0,0,0,0,29],"-424978161": [100,0,0,0,0,0,29],"-424978642.0": [100,0,0,0,0,0,29],"-424978642.170": [100,0,0,0,0,0,29],"-424978643": [100,0,0,0,0,0,29],"-424978647#1": [100,0,0,0,0,0,29],"-448887867": [100,0,0,0,0,0,29],"-448887868": [100,0,0,0,0,0,29],"-448887869": [100,0,0,0,0,0,29],"-448887870#1": [100,0,0,0,0,0,29],"-448887871#0": [100,0,0,0,0,0,29],"-448887871#2": [100,0,0,0,0,0,29],"-49940170#0": [100,0,0,0,0,0,29],"12150712#3": [100,0,0,0,0,0,29],"12150712#4": [100,0,0,0,0,0,29],"12150712#5": [100,0,0,0,0,0,29],"12327906#0": [100,0,0,0,0,0,29],"12327906#1": [100,0,0,0,0,0,29],"196358954#0": [100,0,0,0,0,0,29],"196358954#1": [100,0,0,0,0,0,29],"196358956#0": [100,0,0,0,0,0,29],"387423966": [100,0,0,0,0,0,29],"423956978": [100,0,0,0,0,0,29],"423956979": [100,0,0,0,0,0,29],"423956980": [100,0,0,0,0,0,29],"423965484": [100,0,0,0,0,0,29],"423967058#1": [100,0,0,0,0,0,29],"423967352": [100,0,0,0,0,0,29],"423967353": [100,0,0,0,0,0,29],"423967354": [100,0,0,0,0,0,29],"423967355": [100,0,0,0,0,0,29],"423967356": [100,0,0,0,0,0,29],"423967358#0": [100,0,0,0,0,0,29],"423967358#2": [100,0,0,0,0,0,29],"423967359#0": [100,0,0,0,0,0,29],"423967359#1": [100,0,0,0,0,0,29],"424803245": [100,0,0,0,0,0,29],"424803247#0": [100,0,0,0,0,0,29],"424824619": [100,0,0,0,0,0,29],"424824620": [100,0,0,0,0,0,29],"424824621": [100,0,0,0,0,0,29],"424978639.0": [100,0,0,0,0,0,29],"424978639.102": [100,0,0,0,0,0,29],"424978640": [100,0,0,0,0,0,29],"424978643": [100,0,0,0,0,0,29],"424978644": [100,0,0,0,0,0,29],"424978646": [100,0,0,0,0,0,29],"448887867": [100,0,0,0,0,0,29],"448887868": [100,0,0,0,0,0,29],"448887869": [100,0,0,0,0,0,29],"448887870#0": [100,0,0,0,0,0,29],"448887871#0": [100,0,0,0,0,0,29],"448887871#1": [100,0,0,0,0,0,29]}

<<<<<<< HEAD
=======

https://stackoverflow.com/questions/21286558/python-crashes-using-pandas-and-str-strip/21287235#21287235


### CODEING IN PROGRESS
def TruckCountII():
        global Trucks_this_time_around
        #edge_VehIDhistoryPD.to_csv(EdgeID_HistoryPANDAPATH)
        #edge_VehIDhistoryPD.to_csv(resetEdgeHistoryPANDAPATH)
        Period_Break_Point = general.Period_Break_Point
        edge_VehIDhistoryPD = pd.read_csv(general.resetEdgeHistoryPANDAPATH)
        edge_VehIDhistoryPD = pd.DataFrame(general.edge_VehIDhistoryPD)
        edge_ConditionPD = pd.read_csv(general.EdgeConditionPANDAPATH)
        edge_ConditionPD = pd.DataFrame(general.edge_ConditionPD)
        
        for edge_i in general.Belmont_Ave[:]:
            edge_i_INDEX = int(general.EdgeHistoryDIC[edge_i])
            Edge_i_VehIDs_lastStep_j = traci.edge.getLastStepVehicleIDs(edge_i)
            edge_ConditionPD.at['Trucks_Pi-3',str(edge_i_INDEX)] = edge_ConditionPD.at['Trucks_Pi-2',str(edge_i_INDEX)]
            edge_ConditionPD.at['Trucks_Pi-2',str(edge_i_INDEX)] = edge_ConditionPD.at['Trucks_Pi-1',str(edge_i_INDEX)]
            edge_ConditionPD.at['Trucks_Pi-1',str(edge_i_INDEX)] = edge_ConditionPD.at['Trucks_Pi',str(edge_i_INDEX)]
            edge_ConditionPD.at['Trucks_Pi',str(edge_i_INDEX)] = Edge_i_VehIDs_lastStep_j
            ###pcDF.at['MaxSpeed_i_m/s',str(Belmont_AVEDic[rd])] = maxSpeed_i
            Edge_TOT_Trucks = edge_ConditionPD.at['Tot_Trucks',str(Belmont_AVEDic[edge_i])]
            print(Edge_TOT_Trucks)
            Edge_TOT_Trucks_Current_Period = 0
            for vehID_k in Edge_i_VehIDs_lastStep_j:
                NOofvehIDsinList = 0
                freeSpots = 0
                notcar = 0
                for spot_L in range(edge_VehIDhistoryPD.shape[1]): ## Calculating the number of IDs in the list
                ##Below are nice ways to throw in some numbers
                # edge_VehIDhistoryPD.loc[1,'1']  = 2 #[row integer location, column integer location
                # edge_VehIDhistoryPD.loc[2,'1']= 2135
                # edge_VehIDhistoryPD.loc[3,'1']= 'a12'
                # edge_VehIDhistoryPD.loc[4,'1']= '123'
                    for spot_L in edge_VehIDhistoryPD[str(edge_i_INDEX)]:
                        if spot_L == 0:
                            freeSpots = freeSpots + 1 
                            NOofvehIDsinList = int(edge_VehIDhistoryPD.shape[1]) - freeSpots # fristOpenSpot = NOofvehIDsinList
                            edge_VehIDhistoryPD.at[0,str(edge_i_INDEX)] = NOofvehIDsinList 
                            ###Let's put NoofvehIDinList as a row in 
                    #print("Final freeSpots = ",freeSpots,"NOofvehIDsinList =",NOofvehIDsinList)
                #print(edge_VehIDhistoryPD[str(edge_i_INDEX)]
                        ## Call this first open spot
                    #print("\n#NOofvehIDsinList =",NOofvehIDsinList,"\n")
                ### if ID in departed list = an ID in the edge_VehIDhistoryPD, then remove the ID from edge_VehIDhistoryPD
                departedIDlist = traci.simulation.getDepartedIDList()
                for dptIDs in departedIDlist:
                    if dptIDs in edge_VehIDhistoryPD[str(edge_i_INDEX)]:
                        #edge_VehIDhistoryPD.loc[:,'1'] = edge_VehIDhistoryPD.loc[:,'1'].replace('a12',0)
                        edge_VehIDhistoryPD.loc[:,str(edge_i_INDEX)] = edge_VehIDhistoryPD.loc[:,str(edge_i_INDEX)].replace(dptIDs,0)
                        ### Sorting WORKING NOW https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
                        edge_VehIDhistoryPD.sort_values(by=[edge_i_INDEX],axis=1,ascending =False)
                        ########output https://stackoverflow.com/questions/11106536/adding-row-column-headers-to-numpy-matrices
                    #print("\ndptIDs = ",dptIDs,"\nedge_VehIDhistoryPD = \n",edge_VehIDhistoryPD)
                    ### Adding vehicles to list
                if vehID_k in edge_VehIDhistoryPD[str(edge_i_INDEX)]:
                    continue #? #print("vehID_k is already in here\tvehID_k = ",str(vehID_k))
                elif re.search('Car_(.*?)',str(traci.vehicle.getTypeID(str(vehID_k)))) == None:
                    # print("\nNew vehicle to the list...\nvehIDsinList = ",str(NOofvehIDsinList),"\nedge_VehIDhistoryPD[(NOofvehIDsinList+1)] = ",str(edge_VehIDhistoryPD[NOofvehIDsinList]))
                    # print("\vehID_k = ",str(vehID_k),"\nedge_VehIDhistoryPD[(NOofvehIDsinList+1)] = \n",str(edge_VehIDhistoryPD[(NOofvehIDsinList+1)]),"\n")
                    ##Adding back to array## - !!!!!!!!
                    NOofvehIDsinList = NOofvehIDsinList +1 ## Updating the
                    NOofvehIDsinList = edge_VehIDhistoryPD.at[0,str(edge_i_INDEX)] 
                    notcar = int(notcar) + 1
                    edge_VehIDhistoryPD.loc[int(NOofvehIDsinList),str(edge_i_INDEX)]= vehID_k #removed str() # fristOpenSpot = NOofvehIDsinList + 1
                    ###HEREHEHREHRHERHEHRHERHREH
                    Edge_TOT_Trucks = int(edge_based_truck_count.at[str(edge_i_INDEX)-1,1])+int(notcar)
                    Edge_TOT_Trucks_Current_Period = notcar

                    edge_based_truck_count.loc[int(str(edge_i_INDEX))-1,int(edge_based_truck_count.shape[1]-1)] = Edge_TOT_Trucks_Current_Period
                    edge_based_truck_count.loc[int(str(edge_i_INDEX))-1,1] = Edge_TOT_Trucks
                    edge_VehIDhistoryPD.to_csv(EdgeID_HistoryPANDAPATH)
                    edge_based_truck_count.to_csv(general.NPpath)
            ##Really good level to check the count of trucks per edge per step
        # print("New Step Time is",str(traci.simulation.getCurrentTime()/1000),"Edge-><><",edge_i," Tot-Trucks-=-",general.Edge_TOT_Trucks," Tot-Trucks-This-Period-=",general.Edge_TOT_Trucks_Current_Period)
                Trucks_this_time_around = int(general.Trucks_this_time_around) + int(general.Edge_TOT_Trucks_Current_Period)
       # print("edge_VehIDhistoryPD = ",edge_VehIDhistoryPD,"\n")
        Period_Break_Point = general.Period_Break_Point
        Period_Break_Point = Period_Break_Point + (1/60)
        general.Period_Break_Point = Period_Break_Point
        #print("\n\tPeriod_Break_Point = ",str(Period_Break_Point))
        if int(Period_Break_Point) >= 1:
            #print("\n\tPeriod_Break_Point = ",str(Period_Break_Point))
            for edgez_i in general.Belmont_Ave[:]:
                PC.condition.DetFunc(edgez_i, general.Edge_TOT_Trucks,general.Edge_TOT_Trucks_Current_Period)
            general.Period_Break_Point = 0
            
        # traci.vehicle.addFull("Ben_Tracker_1","U_Tracker_Ben","TRACKER_TRUCK")
        # traci.vehicle.addFull("Ben_Tracker_2","U_Tracker_Ben","TRACKER_TRUCK")
        # traci.vehicle.addFull("Ben_Tracker_3","U_Tracker_Ben","TRACKER_TRUCK")
        # traci.vehicle.addFull("Ben_Tracker_4","U_Tracker_Ben","TRACKER_TRUCK")
        # traci.vehicle.addFull("Ben_Tracker_5","U_Tracker_Ben","TRACKER_TRUCK")

